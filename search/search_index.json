{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Twist-n-Sync. Time synchronization algorithm that employs IMU gyroscope data \u00b6 Imagine that you want to synchronize two smartphones 1 for stereoscopic (or multiscopic) photo or video shutting with microseconds accuracy and precision . Or you need to synchronize Azure Kinect DK depth frames 2 with smartphone frames. Twist-n-Sync is a time synchronization algorithm that can solve the time sync issues by employing gyroscope chips widely available in millions of comsumer gadgets. Another benefical usage of the package is synchronization of diverse motion capture (mocap) systems (OptiTrack, Vicon) that provide ground truth data for robot navigation and state estimation algorithms (Wheeled, Visual, Visual-Inertial Odometry and SLAM). Installation \u00b6 pip install twistnsync Usage examples \u00b6 WIP: The python notebook examples in examples folder provide comprehensive mini-tutorials how to use the code: - two systems sync by gyroscope data ; - TODO mocap data (position orientation) and robot data sync; - TODO clock drift evaluation of two independent systems; References \u00b6 In case of usage of the materials, please, refer to the source and/or publications: 1 1 2 3 4 5 6 7 8 9 10 @article{faizullin2021twist, title={Twist-n-Sync: Software Clock Synchronization with Microseconds Accuracy Using MEMS-Gyroscopes}, author={Faizullin, Marsel and Kornilova, Anastasiia and Akhmetyanov, Azat and Ferrer, Gonzalo}, journal={Sensors}, volume={21}, number={1}, pages={68}, year={2021}, publisher={Multidisciplinary Digital Publishing Institute} } 2 1 2 3 4 5 6 7 8 9 10 @ARTICLE{9709778, author={Faizullin, Marsel and Kornilova, Anastasiia and Akhmetyanov, Azat and Pakulev, Konstantin and Sadkov, Andrey and Ferrer, Gonzalo}, journal={IEEE Sensors Journal}, title={SmartDepthSync: Open Source Synchronized Video Recording System of Smartphone RGB and Depth Camera Range Image Frames with Sub-millisecond Precision}, year={2022}, volume={}, number={}, pages={1-1}, doi={10.1109/JSEN.2022.3150973} } Credits \u00b6 This package was created with Cookiecutter and the zillionare/cookiecutter-pypackage project template.","title":"home"},{"location":"#twist-n-sync-time-synchronization-algorithm-that-employs-imu-gyroscope-data","text":"Imagine that you want to synchronize two smartphones 1 for stereoscopic (or multiscopic) photo or video shutting with microseconds accuracy and precision . Or you need to synchronize Azure Kinect DK depth frames 2 with smartphone frames. Twist-n-Sync is a time synchronization algorithm that can solve the time sync issues by employing gyroscope chips widely available in millions of comsumer gadgets. Another benefical usage of the package is synchronization of diverse motion capture (mocap) systems (OptiTrack, Vicon) that provide ground truth data for robot navigation and state estimation algorithms (Wheeled, Visual, Visual-Inertial Odometry and SLAM).","title":"Twist-n-Sync. Time synchronization algorithm that employs IMU gyroscope data"},{"location":"#installation","text":"pip install twistnsync","title":"Installation"},{"location":"#usage-examples","text":"WIP: The python notebook examples in examples folder provide comprehensive mini-tutorials how to use the code: - two systems sync by gyroscope data ; - TODO mocap data (position orientation) and robot data sync; - TODO clock drift evaluation of two independent systems;","title":"Usage examples"},{"location":"#references","text":"In case of usage of the materials, please, refer to the source and/or publications: 1 1 2 3 4 5 6 7 8 9 10 @article{faizullin2021twist, title={Twist-n-Sync: Software Clock Synchronization with Microseconds Accuracy Using MEMS-Gyroscopes}, author={Faizullin, Marsel and Kornilova, Anastasiia and Akhmetyanov, Azat and Ferrer, Gonzalo}, journal={Sensors}, volume={21}, number={1}, pages={68}, year={2021}, publisher={Multidisciplinary Digital Publishing Institute} } 2 1 2 3 4 5 6 7 8 9 10 @ARTICLE{9709778, author={Faizullin, Marsel and Kornilova, Anastasiia and Akhmetyanov, Azat and Pakulev, Konstantin and Sadkov, Andrey and Ferrer, Gonzalo}, journal={IEEE Sensors Journal}, title={SmartDepthSync: Open Source Synchronized Video Recording System of Smartphone RGB and Depth Camera Range Image Frames with Sub-millisecond Precision}, year={2022}, volume={}, number={}, pages={1-1}, doi={10.1109/JSEN.2022.3150973} }","title":"References"},{"location":"#credits","text":"This package was created with Cookiecutter and the zillionare/cookiecutter-pypackage project template.","title":"Credits"},{"location":"api/","text":"::: twistnsync","title":"modules"},{"location":"installation/","text":"Installation \u00b6 Stable release \u00b6 To install Twist-n-Sync, run this command in your terminal: 1 $ pip install twistnsync This is the preferred method to install Twist-n-Sync, as it will always install the most recent stable release. If you don't have pip installed, this Python installation guide can guide you through the process. From source \u00b6 The source for Twist-n-Sync can be downloaded from the Github repo . You can either clone the public repository: 1 $ git clone git://github.com/MobileRoboticsSkoltech/twistnsync Or download the tarball : 1 $ curl -OJL https://github.com/MobileRoboticsSkoltech/twistnsync/tarball/master Once you have a copy of the source, you can install it with: 1 $ pip install .","title":"installation"},{"location":"installation/#installation","text":"","title":"Installation"},{"location":"installation/#stable-release","text":"To install Twist-n-Sync, run this command in your terminal: 1 $ pip install twistnsync This is the preferred method to install Twist-n-Sync, as it will always install the most recent stable release. If you don't have pip installed, this Python installation guide can guide you through the process.","title":"Stable release"},{"location":"installation/#from-source","text":"The source for Twist-n-Sync can be downloaded from the Github repo . You can either clone the public repository: 1 $ git clone git://github.com/MobileRoboticsSkoltech/twistnsync Or download the tarball : 1 $ curl -OJL https://github.com/MobileRoboticsSkoltech/twistnsync/tarball/master Once you have a copy of the source, you can install it with: 1 $ pip install .","title":"From source"},{"location":"usage/","text":"Usage \u00b6 To use Twist-n-Sync in a project 1 import twistnsync","title":"usage"},{"location":"usage/#usage","text":"To use Twist-n-Sync in a project 1 import twistnsync","title":"Usage"}]}